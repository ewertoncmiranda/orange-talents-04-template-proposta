spring.profiles.active=dev
server.port=8080
spring.application.name=desafiodepropostas
spring.jpa.hibernate.ddl-auto=update

#ACTUATOR
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true
management.endpoint.health.probes.enabled=true
management.endpoint.health.show-details = always
management.endpoint.health.show-components=always

management.metrics.tags.aplicacao=desafioDePropostas
management.metrics.tags.ambiente=desenvolvimento

#KEYCLOAK
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:18080/auth/realms/propostarealm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:18080/auth/realms/propostarealm/protocol/openid-connect/certs
keycloak.realm=propostarealm
keycloak.auth-server-url =http://localhost:18080/auth
keycloak.resource =desafiodepropostas

#PROMETHEUS
management.endpoints.web.exposure.include=health,metrics,prometheus
management.endpoints.prometheus.enabled=true

#recursos do sistema
analise.adress=${ANALISES_ADRESS:http://localhost:9999/api/solicitacao}
cartao.adress=${CARTOES_ADRESS:http://localhost:8888}


#Spring Security
#spring.security.user.name=admin
#spring.security.user.password=admin

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${spring.application.name}
# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}

opentracing.jaeger.log-spans=true
#opentracing.spring.cloud.jdbc.enabled=false